"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class BuilderBase{constructor(){this.requirements=new Map}addRequirements(...e){for(let t of e)this.requirements.set(t,{name:t,isOptional:!1,isFulfilled:!1,value:null})}addOptionals(...e){for(let t of e)this.requirements.set(t,{name:t,isOptional:!0,isFulfilled:!1,value:null})}fulfillRequirement(e,t){if(!this.requirements.has(e))throw new Error("Attempted to fulfill a requirement that did not exist: '"+e+"'.");{let i=this.requirements.get(e);i.isFulfilled=!0,i.value=t}}getValueOfRequirement(e){if(this.requirements.has(e))return this.requirements.get(e).value;throw new Error("Attempted to get the value of a requirement that did not exist: '"+e+"'.")}getNamesOfUnfulfilledRequirements(){let e=[];for(let t of this.requirements.values())!1===t.isOptional&&!1===t.isFulfilled&&e.push(t.name);return e}getNamesOfUnfulfilledOptionalRequirements(){let e=[];for(let t of this.requirements.values())!0===t.isOptional&&!1===t.isFulfilled&&e.push(t.name);return e}getNamesOfUnfulfilledRequirementsAndOptionalRequirements(){let e=[];for(let t of this.requirements.values())!1===t.isFulfilled&&e.push(t.name);return e}getErrorMessageForIncompleteBuilder(){let e="Attempted to build from an incomplete builder. Missing fields include: ",t=this.getNamesOfUnfulfilledRequirements();for(let i=0;i<t.length;i++)e+="'"+t[i]+"'",i<t.length-2?e+=", ":i<t.length-1&&(e+=", and ");return e+="."}checkFulfillment(e){if(e){if(this.requirements.has(e))return this.requirements.get(e).isFulfilled;throw new Error("Attempted to check the fulfillment a requirement that did not exist: '"+e+"'.")}for(let e of this.requirements.values())if(!e.isOptional&&!e.isFulfilled)return!1;return!0}}exports.BuilderBase=BuilderBase;
//# sourceMappingURL=builder-base.js.map
